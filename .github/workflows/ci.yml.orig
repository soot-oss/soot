# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

<<<<<<< HEAD
name: Soot CI with Maven

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  buildAndTest:
=======
name: Soot CI
on:
  push:
  pull_request:

jobs:
  StyleAndLicense:
    name: Check styleÂ´and license conformity
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Java 8
        uses: actions/setup-java@v1
        with:
          java-version: '8'
      - name: Stylecheck
        if: always()
        run: |
          mvn -B clean checkstyle:check -Dcheckstyle.failOnViolation=true
      - name: Licensecheck
        if: always()
        run: |
          mvn -B clean license:check-file-header -Dlicence-check.failOnMissingHeader=true
    
  BuildAndTest:
>>>>>>> develop
    name: Build and Test with java ${{ matrix.java_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java_version: ['8', '9', '11']

    steps:
<<<<<<< HEAD
    - uses: actions/checkout@v1
    - name: Use Java ${{ matrix.java_version }}
      uses: actions/setup-node@v1
      with:
        java-version: ${{ matrix.java_version }}

    - name: Build and test Java ${{ matrix.java_version }}
      run: |
        mvn clean test -PJava${{ matrix.java_version }}
=======
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Java ${{ matrix.java_version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java_version }}
    - name: Build and test Java ${{ matrix.java_version }}
      run: |
        mvn -B clean test -PJava${{ matrix.java_version }}
        
  Deploy:
    name: Deploy artifacts to Maven Central
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/umbrella'
    needs: [BuildAndTest]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Java 8
        uses: actions/setup-java@v1
        with:
          java-version: '8'
      - name: Deploy artifacts
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.gpg_private_key }}
          gpg_passphrase: ${{ secrets.gpg_passphrase }}
          nexus_username: ${{ secrets.nexus_username }}
          nexus_password: ${{ secrets.nexus_password }}
          maven_args: "-DskipTests -Dcheckstyle.failOnViolation=true"
        
      - name: Get Version
        id: version
        run: echo ::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        
      - name: Deploy SNAPSHOT documentation
        if: false && github.ref == 'refs/heads/develop'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.remote_deploy_host }}
          username: ${{ secrets.remote_deploy_username }}
          password: ${{ secrets.remote_deploy_userpasswd }}
          port: ${{ secrets.remote_deploy_port }}
          script: |
            rm -r /data/out/origin/${GITHUB_REF##*/}/soot/soot-${GITHUB_REF##*/}/jdoc || true
            mkdir -p /data/out/origin/${GITHUB_REF##*/}/soot/soot-${GITHUB_REF##*/}/jdoc
            unzip ./target/sootclasses-trunk-javadoc.jar -d /data/out/origin${GITHUB_REF##*/}/soot/soot-${GITHUB_REF##*/}/jdoc/
            
            rm -r /data/out/origin/${GITHUB_REF##*/}/soot/soot-${GITHUB_REF##*/}/options || true
            mkdir -p /data/out/origin/${GITHUB_REF##*/}/soot/soot-${GITHUB_REF##*/}/options
            cp doc/soot_options.htm /data/out/origin/${GITHUB_REF##*/}/soot/soot-${GITHUB_REF##*/}/options
            
      - name: Deploy Release documentation
        if: false && github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.remote_deploy_host }}
          username: ${{ secrets.remote_deploy_username }}
          password: ${{ secrets.remote_deploy_userpasswd }}
          port: ${{ secrets.remote_deploy_port }}
          script: |
            rm -r /data/out/origin/${GITHUB_REF##*/}/soot/soot-${GITHUB_REF##*/}/${{ steps.version.outputs.version }}/jdoc || true
            mkdir -p /data/out/origin/${GITHUB_REF##*/}/soot/soot-${GITHUB_REF##*/}/${{ steps.version.outputs.version }}/jdoc
            unzip ./target/sootclasses-trunk-javadoc.jar -d /data/out/origin/${GITHUB_REF##*/}/soot/soot-${GITHUB_REF##*/}/${{ steps.version.outputs.version }}/jdoc/
            
            rm -r /data/out/origin/${GITHUB_REF##*/}/soot/soot-${GITHUB_REF##*/}/${{ steps.version.outputs.version }}/options || true
            mkdir -p /data/out/origin/${GITHUB_REF##*/}/soot/soot-${GITHUB_REF##*/}/${{ steps.version.outputs.version }}/options
            cp doc/soot_options.htm /data/out/origin/${GITHUB_REF##*/}/soot/soot-${GITHUB_REF##*/}/${{ steps.version.outputs.version }}/options
      
>>>>>>> develop
