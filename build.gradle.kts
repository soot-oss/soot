/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    java
    `maven-publish`
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://oss.sonatype.org/content/repositories/snapshots")
    }

    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    implementation("commons-io:commons-io:2.7")
    implementation("org.smali:dexlib2:2.5.2")
    implementation("org.ow2.asm:asm:9.2")
    implementation("org.ow2.asm:asm-tree:9.2")
    implementation("org.ow2.asm:asm-util:9.2")
    implementation("org.ow2.asm:asm-commons:9.2")
    implementation("xmlpull:xmlpull:1.1.3.4d_b4_min")
    implementation("de.upb.cs.swt:axml:2.1.0-SNAPSHOT")
    implementation("ca.mcgill.sable:polyglot:2006")
    implementation("de.upb.cs.swt:heros:1.2.3-SNAPSHOT")
    implementation("ca.mcgill.sable:jasmin:3.0.3-SNAPSHOT")
    implementation("org.slf4j:slf4j-api:2.0.3")
    implementation("javax.annotation:javax.annotation-api:1.3.2")
    implementation("javax.xml.bind:jaxb-api:2.4.0-b180725.0427")
    implementation("org.glassfish.jaxb:jaxb-runtime:2.4.0-b180830.0438")
    implementation("com.google.protobuf:protobuf-java:3.21.7")
    implementation("com.google.protobuf:protobuf-java-util:3.21.2")
    testImplementation("org.slf4j:slf4j-simple:2.0.3")
    testImplementation("junit:junit:4.13.2")
    testImplementation("org.hamcrest:hamcrest-all:1.3")
    testImplementation("org.mockito:mockito-core:3.6.0")
    testImplementation("org.powermock:powermock-api-mockito2:2.0.9")
    testImplementation("org.powermock:powermock-module-junit4:2.0.9")
    testImplementation("com.google.android:android:4.1.1.4")
    compileOnly("org.javassist:javassist:3.28.0-GA")
    compileOnly("org.apache.ant:ant:1.10.11")
}

group = "org.soot-oss"
version = "4.4.0-SNAPSHOT"
description = "Soot - a J*va Optimization Framework"
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}
